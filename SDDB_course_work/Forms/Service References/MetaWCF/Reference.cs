//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Forms.MetaWCF {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataBaseModel", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    [System.SerializableAttribute()]
    public partial class DataBaseModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DatabaseInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DatabaseInfo {
            get {
                return this.DatabaseInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.DatabaseInfoField, value) != true)) {
                    this.DatabaseInfoField = value;
                    this.RaisePropertyChanged("DatabaseInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MetaWCF.IWcfMetaService")]
    public interface IWcfMetaService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfMetaService/GetData1", ReplyAction="http://tempuri.org/IWcfMetaService/GetData1Response")]
        string GetData1(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfMetaService/GetData1", ReplyAction="http://tempuri.org/IWcfMetaService/GetData1Response")]
        System.Threading.Tasks.Task<string> GetData1Async(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfMetaService/GetAll", ReplyAction="http://tempuri.org/IWcfMetaService/GetAllResponse")]
        Forms.MetaWCF.DataBaseModel[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfMetaService/GetAll", ReplyAction="http://tempuri.org/IWcfMetaService/GetAllResponse")]
        System.Threading.Tasks.Task<Forms.MetaWCF.DataBaseModel[]> GetAllAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWcfMetaServiceChannel : Forms.MetaWCF.IWcfMetaService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WcfMetaServiceClient : System.ServiceModel.ClientBase<Forms.MetaWCF.IWcfMetaService>, Forms.MetaWCF.IWcfMetaService {
        
        public WcfMetaServiceClient() {
        }
        
        public WcfMetaServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WcfMetaServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WcfMetaServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WcfMetaServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData1(int value) {
            return base.Channel.GetData1(value);
        }
        
        public System.Threading.Tasks.Task<string> GetData1Async(int value) {
            return base.Channel.GetData1Async(value);
        }
        
        public Forms.MetaWCF.DataBaseModel[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<Forms.MetaWCF.DataBaseModel[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
    }
}
